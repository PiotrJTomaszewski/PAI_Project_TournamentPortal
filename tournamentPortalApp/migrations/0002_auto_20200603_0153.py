# Generated by Django 3.0.6 on 2020-06-02 23:53

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import tournamentPortalApp.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('tournamentPortalApp', '0001_initial'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='tournament',
            name='start_date',
        ),
        migrations.AddField(
            model_name='tournament',
            name='description',
            field=models.TextField(default=''),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='tournament',
            name='prizes',
            field=models.TextField(default=''),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='tournament',
            name='deck_format',
            field=models.CharField(choices=[(tournamentPortalApp.models.TournamentDeckFormatChoice['sin'], 'Single-deck format'), (tournamentPortalApp.models.TournamentDeckFormatChoice['mul'], 'Multiple-deck format')], max_length=3),
        ),
        migrations.AlterField(
            model_name='tournament',
            name='game_format',
            field=models.CharField(choices=[(tournamentPortalApp.models.TournamentGameFormatChoice['std'], 'Standard format'), (tournamentPortalApp.models.TournamentGameFormatChoice['wld'], 'Wild format')], max_length=3),
        ),
        migrations.AlterField(
            model_name='tournament',
            name='location_type',
            field=models.CharField(choices=[(tournamentPortalApp.models.TournamentLocationChoice['net'], 'Network'), (tournamentPortalApp.models.TournamentLocationChoice['loc'], 'Physical location')], max_length=3),
        ),
        migrations.AlterField(
            model_name='tournament',
            name='name',
            field=models.CharField(max_length=100),
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tournament', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='tournamentPortalApp.Tournament')),
                ('user', models.OneToOneField(on_delete=models.SET(tournamentPortalApp.models.getUserDeleted), to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
